<?php
header('Content-Type: application/json');
// Prevent caching of this endpoint by clients
header('Cache-Control: no-store, no-cache, must-revalidate, max-age=0');
header('Cache-Control: post-check=0, pre-check=0', false);
header('Pragma: no-cache');

// Determine which status file should be read. If a CPF is provided via GET,
// use the per-CPF status file generated by callback_handler.php. Otherwise,
// fall back to the legacy global latest_status.json for backward compatibility.
$cpfParam = $_GET['cpf'] ?? '';
$cpfDigits = preg_replace('/\D/', '', $cpfParam);
if ($cpfDigits !== '') {
    $statusFilePath = __DIR__ . "/status_files/latest_status_{$cpfDigits}.json";
} else {
    $statusFilePath = __DIR__ . '/latest_status.json';
}

$defaultVideoDesktop = 'BackgroundVideos/desktop.mp4'; // Default initial video
$defaultVideoMobile = 'BackgroundVideos/mobile.mp4';   // Default initial mobile video

// Basic device detection (can be enhanced, or let client decide fully)
$userAgent = $_SERVER['HTTP_USER_AGENT'] ?? '';
// This is a very simplistic mobile check. The client-side JS does a better job with media queries.
// For the default, we primarily rely on the client to pick the right one initially.
// This default video path is more of a fallback if latest_status.json is empty.
$isVideoMobileContext = (bool)preg_match('/(android|iphone|ipad|ipod|blackberry|windows phone)/i', $userAgent);
$defaultVideo = $isVideoMobileContext ? $defaultVideoMobile : $defaultVideoDesktop;


if (file_exists($statusFilePath)) {
    $content = file_get_contents($statusFilePath);
    $decodedData = json_decode($content, true); // Decode as associative array

    // Check if content is not empty and is valid JSON that decodes to an array or object
    if (!empty($content) && json_last_error() === JSON_ERROR_NONE && (is_array($decodedData) || is_object($decodedData))) {
        echo $content; // Echo original content as it's valid JSON
    } else {
        // latest_status.json is corrupted, empty, or not valid JSON object/array
        $errorMessage = "Error: {$statusFilePath} is empty, contains invalid JSON, or is not a JSON object/array.";
        if (empty($content)) {
            $errorMessage = "Error: {$statusFilePath} is empty.";
        } else if (json_last_error() !== JSON_ERROR_NONE) {
            $errorMessage = "Error: {$statusFilePath} contains invalid JSON. Details: " . json_last_error_msg();
        }
        error_log($errorMessage);

        echo json_encode([
            'status' => 'error_reading_status', // More specific status
            'message' => 'Falha ao ler o estado atual do processamento. Verifique os logs do servidor.',
            'progress' => 0,
            'video' => $defaultVideo,
            'timestamp' => time(),
            'error_details' => $errorMessage
        ]);
    }
} else {
    // File doesn't exist, return a default initial state for the very first poll
    echo json_encode([
        'status' => 'pending',
        'message' => 'Aguardando inÃ­cio do processamento...',
        'progress' => 0,
        'video' => $defaultVideo, // Provide a default video
        'timestamp' => time()
    ]);
}
exit;
?>
